# -*- coding: utf-8 -*-
"""(Samsung_Products)DataCrawling.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17ghptQ1j9UP6ft9jLowf1q0vH17PSbNb
"""

#@title Twitter Auth Token
#encem

twitter_auth_token = '4e059aa3bb265be3444beb579e099a67f7970d14'

"""## Installing Libraries"""

# Import required Python package
!pip install pandas

# Install Node.js (because tweet-harvest built using Node.js)
!sudo apt-get update
!sudo apt-get install -y ca-certificates curl gnupg
!sudo mkdir -p /etc/apt/keyrings
!curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg

!NODE_MAJOR=20 && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list

!sudo apt-get update
!sudo apt-get install nodejs -y

!node -v

"""## List of Positive, Negative & Characteristics Keywords

---


"""

# Crawl Data

filename = 'SamsungGalaxyS24.csv'

# Define positive and negative keywords for Samsung Galaxy S24, S24 Ultra, and product characteristics
positive_keywords = (
    "love OR loved OR amazing OR amazed OR best OR excellent OR fantastic OR great OR affordable OR user-friendly OR "
    "impressive OR worth OR incredible OR fast OR smooth OR reliable OR advanced OR awesome OR innovative OR "
    "powerful OR exceptional OR premium OR elegant OR stylish OR efficient OR beautiful OR unique OR "
    "top-notch OR next-level OR iconic OR ontop OR perfect OR revolutionary OR flawless OR outstanding OR superior OR "
    "amazingexperience OR favorite OR LOVE OR AMAZING OR BEST OR EXCELLENT OR FANTASTIC OR GREAT OR AFFORDABLE OR "
    "USER-FRIENDLY OR IMPRESSIVE OR WORTH OR INCREDIBLE OR FAST OR SMOOTH OR RELIABLE OR ADVANCED OR AWESOME OR "
    "INNOVATIVE OR POWERFUL OR EXCEPTIONAL OR PREMIUM OR ELEGANT OR STYLISH OR EFFICIENT OR BEAUTIFUL OR UNIQUE OR "
    "TOP-NOTCH OR NEXT-LEVEL OR ICONIC OR PERFECT OR REVOLUTIONARY OR FLAWLESS OR OUTSTANDING OR SUPERIOR OR "
    "AMAZINGEXPERIENCE OR FAVORITE OR Love OR Amazing OR Best OR Excellent OR Fantastic OR Great OR Affordable OR "
    "User-Friendly OR Impressive OR Worth OR Incredible OR Fast OR Smooth OR Reliable OR Advanced OR Awesome OR "
    "Innovative OR Powerful OR Exceptional OR Premium OR Elegant OR Stylish OR Efficient OR Beautiful OR Unique OR "
    "Top-Notch OR Next-Level OR Iconic OR Perfect OR Revolutionary OR Flawless OR Outstanding OR Superior OR "
    "AmazingExperience OR Favorite"
)

negative_keywords = (
    "disappointing OR dissapointed OR not worst OR terrible OR frustrating OR buggy OR overpriced OR unresponsive OR overheating OR "
    "not worth OR unreliable OR slow OR laggy OR expensive OR overhyped OR annoying OR poor OR lacking OR broken OR "
    "unstable OR useless OR complicated OR glitchy OR underwhelming OR weak OR outdated OR frustrated OR unimpressed OR "
    "bad OR unsatisfied OR unacceptable OR irritating OR problematic OR disliked OR hated OR DISAPPOINTING OR WORST OR "
    "TERRIBLE OR FRUSTRATING OR BUGGY OR OVERPRICED OR UNRESPONSIVE OR OVERHEATING OR NOT WORTH OR UNRELIABLE OR SLOW OR "
    "LAGGY OR EXPENSIVE OR OVERHYPED OR ANNOYING OR POOR OR LACKING OR BROKEN OR UNSTABLE OR USELESS OR COMPLICATED OR "
    "GLITCHY OR UNDERWHELMING OR WEAK OR OUTDATED OR FRUSTRATED OR UNIMPRESSED OR BAD OR UNSATISFIED OR UNACCEPTABLE OR "
    "IRRITATING OR PROBLEMATIC OR DISLIKED OR HATED OR Disappointing OR Worst OR Terrible OR Frustrating OR Buggy OR "
    "Overpriced OR Unresponsive OR Overheating OR Not Worth OR Unreliable OR Slow OR Laggy OR Expensive OR Overhyped OR "
    "Annoying OR Poor OR Lacking OR Broken OR Unstable OR Useless OR Complicated OR Glitchy OR Underwhelming OR Weak OR "
    "Outdated OR Frustrated OR Unimpressed OR Bad OR Unsatisfied OR Unacceptable OR Irritating OR Problematic OR Disliked OR Hated"
)


characteristics_keywords = """
camera OR display OR battery OR performance OR design OR operating system OR software OR price OR 5G OR ecosystem OR CAMERA OR DISPLAY OR BATTERY OR PERFORMANCE OR DESIGN OR OPERATING SYSTEM OR SOFTWARE OR PRICE OR 5G OR ECOSYSTEM
OR camera OR display OR battery OR performance OR design OR operating system OR software
OR price OR 5G OR ecosystem OR processor OR chipset OR storage OR RAM
OR build quality OR material OR MagSafe OR port OR night mode OR zoom OR portrait mode
OR video quality OR cinematic mode OR stabilization OR refresh rate OR OLED OR brightness
OR resolution OR Dynamic Island OR benchmark OR speed OR gaming OR multitasking OR charging
OR fast charging OR wireless charging OR battery health OR endurance OR size OR weight OR colors
OR bezel OR notch OR Android 14 OR updates OR bugs OR features OR compatibility OR Wi-Fi OR Bluetooth
OR cellular OR Dual SIM OR eSIM OR accessibility OR ease of use OR customization OR integration
OR comparison OR Vs iPhone OR Galaxy S24 OR Galaxy S24 Ultra OR S24 Ultra OR Dynamic AMOLED OR Dynamic LTPO AMOLED OR Snapdragon 8 Gen 3
"""

## Characteristics for Samsung Galaxy s23 ( Snapdragon 8 Gen 2, Dynamic AMOLED and Android 13)

# Define keywords for Samsung Galaxy S24 (other models)
product_keywords = '(Galaxy S23 OR Galaxy S23 Ultra OR S23 OR S23 Ultra OR Samsung Galaxy S24 OR Samsung Galaxy S24 Ultra)'

# Define keywords for Samsung Galaxy S23 (other models)
#product_keywords = '(Galaxy S23 OR Galaxy S23 Ultra OR S23 OR S23 Ultra OR Samsung Galaxy S23 OR Samsung Galaxy S23 Ultra)'

# Combine all the keywords (positive, negative, characteristics, and product names)
search_keyword = f"({product_keywords} AND ({characteristics_keywords} OR {negative_keywords} OR {positive_keywords})) since:2024-01-01 until:2024-12-31 lang:en"

limit = 10000

# Crawl data using tweet-harvest with the search query
!npx -y tweet-harvest@2.6.1 -o "{filename}" -s "{search_keyword}" --tab "LATEST" -l {limit} --token {twitter_auth_token}

import pandas as pd

# Specify the path to your CSV file
file_path = f"tweets-data/{filename}"

# Read the CSV file into a pandas DataFrame
df = pd.read_csv(file_path, delimiter=",")

# Display the DataFrame
display(df)

# Check the number of tweets

num_tweets = len(df)
print(f"Number of tweets in the dataframe: {num_tweets}.")

"""## Handling Spam Text & duplicate datas
---
"""

# List of spam-related keywords
spam_keywords = [
    'deals', 'coupon', 'discount', 'promo', 'offer',
    'link', 'http', 'https', 'shop', 'sale', 'Temu', 'read', "find"
]

# Filter function to remove spam-related tweets
def is_relevant_tweet(tweet):
    for keyword in spam_keywords:
        if keyword in tweet.lower():
            return False
    return True


# Apply filters
df['relevant'] = df['full_text'].apply(is_relevant_tweet)  # Assuming 'content' is the tweet text column
df_relevant = df[df['relevant']].drop(columns=['relevant'])

# Drop duplicate tweets
df_relevant = df_relevant.drop_duplicates(subset=['full_text'])

# Display filtered dataset
print(f"Number of filtered tweets: {len(df_relevant)}.")
display(df_relevant.head())

"""## Save the data in CSV file"""

# Save the filtered dataset
cleaned_filename = "SamsungGalaxyS24_cleaned.csv"
df_relevant.to_csv(cleaned_filename, index=False)
print(f"Filtered tweets saved to {cleaned_filename}.")

# Count the number of rows (which represents the number of tweets) in the cleaned DataFrame
num_cleaned_tweets = len(df_relevant)

print(f"Number of tweets in the cleaned file: {num_cleaned_tweets}")